include Base;

let ofString = Formatting.ofString;
let ofStringBase = Formatting.ofStringBase;
let ofInt = Types.ofInt;
let ofFloat = Types.ofFloat;
let toFloat = x => Types.toDecimal(x)->Decimal.toFloat;
let zero = Types.zero;
let one = Types.one;
let minusOne = Types.minusOne;
let i = Types.i;
let minusI = Types.minusI;
let pi = Types.pi;
let e = Types.e;
let sin = Trig.sin;
let cos = Trig.cos;
let tan = Trig.tan;
let asin = Trig.asin;
let acos = Trig.acos;
let atan = Trig.atan;
let sinh = Trig.sinh;
let cosh = Trig.cosh;
let tanh = Trig.tanh;
let asinh = Trig.asinh;
let acosh = Trig.acosh;
let atanh = Trig.atanh;
let re = Complex.re;
let im = Complex.im;
let conj = Complex.conj;
let gamma = Factorial.gamma;
let factorial = Factorial.factorial;
let nPr = Combination.nPr;
let nCr = Combination.nCr;
let rand = Rand.rand;
let randInt = Rand.randInt;
let solveRoot = RootFinder.solveRoot;
let var2 = SystemEquations.var2;
let var3 = SystemEquations.var3;
let quadratic = Polynomial.quadratic;
let cubic = Polynomial.cubic;
let toString = Formatting.toString;
let encode = Encoding.encode;
let decode = Encoding.decode;
